:grammar:
    <програма>::=<спільний блок змінних> <спільний блок операторів у дужках>|<програма>\n

<:Блок ініціалізації змінних:>
    <спільний блок змінних>::=<блок змінних>

    <блок змінних>::=<ініціалізація змінних>\n<блок змінних>|<ініціалізація змінних>\n
    <ініціалізація змінних>::=<тип><список змінних>
    <тип>::=int|double|bool
    <список змінних>::=<присвоєння>,<список змінних>|<присвоєння>

<;Блок ініціалізації змінних;>

<:Блок операторів у дужках:>
    <спільний блок операторів у дужках>::={<блок операторів у дужках>}|{\n <блок операторів у дужках>}

    <блок операторів у дужках>::=<спільний блок операторів>
<;Блок операторів у дужках;>

<:Блок операторів:>
    <спільний блок операторів>::=<блок операторів>
    <блок операторів>::=<оператор>\n|<блок операторів з переносом>
    <блок операторів з переносом>::=<оператор>\n<блок операторів перед переносом>
    <блок операторів перед переносом>::=<блок операторів>
    <оператор>::=<цикл>|<умовний перехід>|<оператор вводу>|<оператор виводу>|<оператор присвоєння>|<мітка>
    <цикл>::= for <оператор присвоєння> while <спільне відношення> <внутрішній блок операторів>
    <умовний перехід>::=if <спільне відношення> then <внутрішній блок операторів>|if <спільне відношення> then <внутрішній блок операторів> else <внутрішній блок операторів>
    <оператор вводу>::= cin <аргументи оператора вводу>
    <аргументи оператора вводу>::= << IDN| << IDN <аргументи оператора вводу>

    <оператор виводу>::= cout <аргументи оператора виводу>
    <аргументи оператора виводу>::= >> <вираз>|>> <вираз> <аргументи оператора виводу>

    <оператор присвоєння>::= <присвоєння>
    <операторна змінна>::=<змінна>

    <мітка>::=POINTER|POINTER :

    <операторний арифметичний вираз>::=<спільний арифметичний вираз>
    <внутрішній блок операторів>::=<спільний блок операторів у дужках>
<;Блок операторів;>

<:Відношення:>
    <спільне відношення>::=<відношення>


    <відношення>::=<лівий арифметичний вираз><знак відношення><правий арифметичний вираз>
    <знак відношення>::=>|<|>=|<=|!=|==

    <правий арифметичний вираз>::=<лівий арифметичний вираз>
    <лівий арифметичний вираз>::=<спільний арифметичний вираз>

<;Відношення;>

<:Арифметичний вираз:>
    <спільний арифметичний вираз>::=<арифметичний добуток>|<спільний арифметичний вираз>+<арифметичний добуток>|<спільний арифметичний вираз>-<арифметичний добуток>

    <арифметичний добуток>::=<добуток>
    <добуток>::=<арифметичний вираз у дужках>|<добуток>*<арифметичний вираз у дужках>|<добуток>/<арифметичний вираз у дужках>

    <арифметичний вираз у дужках>::=<вираз у дужках>
    <вираз у дужках>::=(<циклічний арифметичний вираз>)|CON|<змінна>

    <циклічний арифметичний вираз>::=<спільний арифметичний вираз>

<;Арифметичний вираз;>

<:Присвоєння:>
    <присвоєння>::= <змінна присвоєння> = <вираз>

    <змінна присвоєння> ::= <змінна>
<;Присвоєння;>

<:Вираз:>
    <вираз>::=<спільний арифметичний вираз>|<спільне відношення>
<;Вираз;>

<:Змінна:>
    <змінна>::=IDN
<;Змінна;>

:types:
    IDN:;=int|double|bool

:regex:
    IDN;;=^[a-zA-Z_][a-zA-Z0-9_]*$
    CON;;=^([1-9][0-9]*|0)?\.[0-9]+$|^[1-9][0-9]*$|^0$
    POINTER;;=^#[a-zA-Z][a-zA-Z0-9_]*$
:rpn:
<програма>:=: <1> \n ->> <1>
<блок змінних>:=:<1>\n<2> ->> <1><2> |<1>\n ->> <1>
<тип>:=: int ->> | double->> | bool->>
<список змінних>:=:<1>,<2> ->> <1><2>
<спільний блок операторів у дужках>:=:{<1>} ->> <1>| {\n <1>} -> <1>
<блок операторів>:=:<1>\n ->> <1>
<блок операторів з переносом>:=: <1>\n<2> ->> <1><2>
<цикл> :=: for <1> while <2> <3> ->> <1> #2 <2> #1; <3> #2: #1
<умовний перехід> :=: if <1> then <2> ->> <1> #1 ; <2> #1 | if <1> then <2> else <3> ->> <1>#1; <2> #2: #1 <3> #2
<оператор вводу> :=: cin <1> ->> <1>
<аргументи оператора вводу>:=: << IDN ->> IDN << | << IDN  <1> ->> IDN << <1>
<аргументи оператора виводу>:=: >> <1> ->> <1> >> |  >> <1> <2> ->> <1> >> <2>
<оператор виводу>:=: cout <1> ->> <1>
<відношення>:=: <1><2><3> ->> <1><3><2>
<спільний арифметичний вираз> :=: <1> + <2> ->> <1><2>+ | <1> - <2> ->> <1><2>-
<добуток> :=: <1> * <2> ->> <1> <2> * | <1> / <2> ->> <1> <2> /
<вираз у дужках> :=: ( <1> ) ->> <1>
<присвоєння> :=: <1> = <2> ->>  <1><2>=




